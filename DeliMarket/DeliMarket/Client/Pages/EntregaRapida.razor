@page "/EntregaRapida"

@inject IRepositorio  repositorio
@inject OrdenEstado ordenEstado
@inject NavigationManager NavigationManager
@inject JSRuntime JS

<h3>Entrega Rápida</h3>
<div class="mt-3" style="margin-right:240px;">
    <div class="row mt-2">
        <ListadoGenerico Listado="entregaRapida">
            <HayRegistros Context="productoMercado">
                <ProductoIndividual Producto="productoMercado"/>
            </HayRegistros>
        </ListadoGenerico>
    </div>
</div>

<div id="sidebar-wrapper">
    @if (orden.Detalles.Any())
    {
        <div class="order-contents">
            <h2>Tu Orden</h2>

            @foreach (var detalle in orden.Detalles)
            {
                <ProductoMercadoItem Detalle="detalle" OnRemoved="@(()=>RemoverDetalle(detalle))"/>
            }
        </div>
    }
    else
    {
        <div class="empty-cart">Selecciona un producto<br>para empezar</div>
    }

    <div class="order-total @(orden.Detalles.Any() ? "" : "hidden")">
        Total:
        <span class="total-price">@orden.GetFormattedTotalPrice()</span>
        <a href="checkout" class="@(orden.Detalles.Count == 0 ? "btn btn-warning disabled" : "btn btn-warning")">
            Order >
        </a>
    </div>

    @*<TemplatedDialog Show="OrderState.ShowingConfigureDialog">
        <ConfigurePizzaDialog Pizza="OrderState.ConfiguringPizza"
                              OnCancel="OrderState.CancelConfigurePizzaDialog"
                              OnConfirm="OrderState.ConfirmConfigurePizzaDialog" />
    </TemplatedDialog>*@
</div>

@code {

    Orden orden => ordenEstado.Orden;

    private List<ProductoMercado> entregaRapida;

    protected async override Task OnInitializedAsync()
    {
        var httpResponse = await repositorio.Get<HomePageDTO>("api/Usuarios/listaproductospersonalizada/true/false");

        if (httpResponse.Error)
        {
            Console.WriteLine(httpResponse.HttpResponseMessage.StatusCode);
        }
        else
        {
            entregaRapida = httpResponse.Response.ProductosMercadoEnvioRapido;
        }
    }

    async Task RemoverDetalle(Detalle detalle)
    {
        if (await JS.Confirm($"Remover {detalle.Productomercado.Producto.Titulo} de tu orden?"))
        {
            ordenEstado.RemoverDetalle(detalle);
        }
    }

}
