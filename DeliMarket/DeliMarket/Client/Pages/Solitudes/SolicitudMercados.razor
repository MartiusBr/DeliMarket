@page "/SolicitudMercados"
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensajes
@attribute [Authorize(Roles = "admin")]

    <div class="row">
        <div class="col-xl-12">
            <div class="ms-panel">
                <div class="ms-panel-header">
                    <h6>SOLICITUD MERCADOS</h6>
                </div>
                <div class="ms-panel-body">

                    <Paginacion PaginaActual="paginaActual" PaginaSeleccionada="paginaSeleccionada"
                                PaginasTotales="paginasTotales"></Paginacion>

                    <div class="table-responsive">
                        <ListadoGenerico Listado="MercadosSolicitud">
                            <HayRegistrosCompleto>
                                <table class="table table-hover thead-primary">
                                    <thead>
                                        <tr>
                                            <th scope="col">Nombre Mercado</th>
                                            <th scope="col">Correo</th>
                                            <th scope="col">RUC</th>
                                            <th scope="col">Nombre Propietario</th>
                                            <th scope="col">Registro Sanitario</th>
                                            <th scope="col">Número Celular</th>
                                            <th scope="col">Autorizado</th>
                                            <th scope="col">Validar/Rechazar</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in MercadosSolicitud)
                                        {
                                        <tr>
                                            <th scope="row">@item.Nombre</th>
                                            <td>@item.Email</td>
                                            <td>@item.RUC</td>                                            
                                            <td>@item.NroSanidad</td>
                                            <td>@item.NumeroCel</td>
                                            <td>@item.Autorizado</td>
                                            <td>
                                                <a @onclick="@(() => ValidarMercado(item))" style="cursor:pointer"><i class='fas fa-check text-secondary'></i></a>
                                                <a @onclick="@(() => BorrarMercado(item))" style="cursor:pointer"><i class='far fa-trash-alt ms-text-danger'></i></a>
                                            </td>
                                        </tr>
                                    }
                                    </tbody>
                                </table>
                            </HayRegistrosCompleto>
                        </ListadoGenerico>
                    </div>
                </div>
            </div>
        </div>
    </div>

@code {

    public List<Mercado> MercadosSolicitud { get; set; }
    private int paginaActual = 1;
    private int paginasTotales;

    protected async override Task OnInitializedAsync()
    {
        await Cargar();
    }

    private async Task paginaSeleccionada(int pagina)
    {
        paginaActual = pagina;
        await Cargar(pagina);
    }

    private async Task Cargar(int pagina = 1)
    {
        var responseHttp = await repositorio.Get<List<Mercado>>($"api/mercados?pagina={pagina}");
        if (!responseHttp.Error)
        {
            var TodoMercados = responseHttp.Response;
            MercadosSolicitud = TodoMercados.Where(x => !x.Autorizado).ToList();
            var conteo = responseHttp.HttpResponseMessage.Headers.GetValues("conteo").FirstOrDefault();
            paginasTotales = int.Parse(responseHttp.HttpResponseMessage.Headers.GetValues("totalPaginas").FirstOrDefault());
        }
    }

    private async Task ValidarMercado(Mercado mercado)
    {
        var responseHttp = await repositorio.Put("api/mercados/validar", mercado);
        if (responseHttp.Error)
        {
            await mostrarMensajes.MostrarMensajeError(await responseHttp.GetBody());
        }
        else
        {
            await mostrarMensajes.MostrarMensajeExitoso("Mercado Validado Satisfactoriamente");
            await Cargar();
        }

    }

    private async Task BorrarMercado(Mercado mercado)
    {
        var responseHttp = await repositorio.Delete($"api/mercados/{mercado.Id}");
        if (responseHttp.Error)
        {
            await mostrarMensajes.MostrarMensajeError(await responseHttp.GetBody());
        }
        else
        {
            await mostrarMensajes.MostrarMensajeExitoso("Mercado rechazado y eliminado");
            await Cargar();
        }

    }
}