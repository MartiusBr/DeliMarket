@page "/SolicitudRepartidores"
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensajes
@attribute [Authorize(Roles = "admin")]

<h3>Indice Solicitudes Repartidores</h3>

<Paginacion PaginaActual="paginaActual" PaginaSeleccionada="paginaSeleccionada"
            PaginasTotales="paginasTotales"></Paginacion>

<ListadoGenerico Listado="Repartidores">
    <HayRegistrosCompleto>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th></th>
                    <th>Nombre Repartidor</th>
                    <th>DNI</th>
                    <th>Email</th>
                    <th>Numero Celular</th>
                    <th>Placa Vehículo</th>
                    <th>Afiliación</th>
                    <th>Tipo</th>
                    <th>Autorizado</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Repartidores)
                {
                <tr>
                    <td>
                        <a href="#" class="btn btn-success">Aceptar</a>
                        <a href="#" class="btn btn-danger">Rechazar</a>
                    </td>
                    <td>@item.Nombre</td>
                    <td>@item.DNI</td>
                    <td>@item.Email</td>
                    <td>@item.NumeroCel</td>
                    <td>@item.PlacaVehiculo</td>
                    <td>@item.Afiliacion</td>
                    <td>@item.Tipo</td>
                    <td>@item.Autorizado</td>
                </tr>
                }
            </tbody>
        </table>
    </HayRegistrosCompleto>
</ListadoGenerico>

@code {
    public List<Repartidor> Repartidores { get; set; }
    private int paginaActual = 1;
    private int paginasTotales;

    protected async override Task OnInitializedAsync()
    {
        await Cargar();
    }

    private async Task paginaSeleccionada(int pagina)
    {
        paginaActual = pagina;
        await Cargar(pagina);
    }

    private async Task Cargar(int pagina = 1)
    {
        var responseHttp = await repositorio.Get<List<Repartidor>>($"api/repartidores?pagina={pagina}");
        if (!responseHttp.Error)
        {
            Repartidores = responseHttp.Response;
            var conteo = responseHttp.HttpResponseMessage.Headers.GetValues("conteo").FirstOrDefault();
            paginasTotales = int.Parse(responseHttp.HttpResponseMessage.Headers.GetValues("totalPaginas").FirstOrDefault());
        }
    }

}