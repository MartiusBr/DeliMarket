@page "/Usuario/Mapa"

@inject IJSRuntime JSRuntime
@inject IRepositorio repositorio
@inject NavigationManager navigationManager
@inject IMostrarMensajes mostrarMensajes

@using DeliMarket.Client.Auth

<div class="h2">Dirección de Entrega</div>
<div class="h4">Permite tu ubicacion no lo olvides</div>



@*<EditForm Model="@latlong" OnValidSubmit="IngresarUbicacion">
        <DataAnnotationsValidator />

        <div class="form-group">
            <label>Dirección:</label>
            <div>
                <InputText id="address" name="address" placeholder="Address" Class="form-control" @bind-Value="@latlong.AddressName" />
            </div>
        </div>

        <div class="form-group">
            <label>Latitud:</label>
            <div>
                <InputText id="latitude" name="latitude" placeholder="Latitud" Class="form-control" @bind-Value="@latlong.Latitude" />
            </div>
        </div>

        <div class="form-group">
            <label>Longitud:</label>
            <div>
                <InputText id="longitude" name="longitude" placeholder="Longitude" Class="form-control" @bind-Value="@latlong.Longitude" />
            </div>
        </div>

        <div id="map"></div>

        <button type="submit" class="btn btn-primary">Aceptar</button>

    </EditForm>*@
<div class="md-form">
    <input class="white h4" style="width:20em" type="text" id="address" name="address" placeholder="Ingresa tu dirección">
</div>
<div class="d-none">
    <input type="text" id="latitude" name="latitude" placeholder="Latitude" readonly>
    <input type="text" id="longitude" name="longitude" placeholder="Longitude" readonly>
</div>
<div class="h3 mt-3">Si no encuentras tu ubicación ubícate en el mapa</div>

<button class="btn btn-info btn-pill btn-block mt-3 mb-3 indigo darken-2" @onclick="IngresarUbicacion">Agregar Ubicación</button>
<div class="card mt-3">
    <div id="map" style="width:100%;height:400px"></div>
</div>



@code {

    ApplicationUser usuario;
    private LatLong latlong = new LatLong();


    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        var httpResponse = await repositorio.Get<ApplicationUser>("api/usuarios/GetCliente");
        if (httpResponse.Error)
        {
            await mostrarMensajes.MostrarMensajeError("Error al cargar la ubicación del usuario");
        }
        else
        {
            usuario = httpResponse.Response;
            
        }

        Console.WriteLine($"user : {usuario.UserName} ; lat: {usuario.Latitude} - long: {usuario.Longitude}");

        if (firstRender)
        {
            await JSRuntime.InitMap(usuario.Latitude, usuario.Longitude);
            
        }

    }

    //protected async override Task OnInitializedAsync()
    //{
    //    var httpResponse = await repositorio.Get<ApplicationUser>("api/usuarios/GetCliente");
    //    if (httpResponse.Error)
    //    {
    //        await mostrarMensajes.MostrarMensajeError("Error al cargar la ubicación del usuario");
    //    }
    //    else
    //    {
    //        usuario = httpResponse.Response;
    //    }
    //}

    private async Task IngresarUbicacion()
    {
        var dirnomlatlong = await JSRuntime.InvokeAsync<Object>("GetLatLong");

        var jsonDirNomLatLong = System.Text.Json.JsonSerializer.Serialize(dirnomlatlong);

        Console.WriteLine(jsonDirNomLatLong);

        latlong = System.Text.Json.JsonSerializer.Deserialize<LatLong>(jsonDirNomLatLong);
        //Console.WriteLine($"Nombre Dirección: {lal.AddressName}, Lat: {lal.Latitude} , Long: {lal.Longitude}");

        var httpResponse = await repositorio.Put<LatLong>("api/Usuarios/AgregarUbicacion", latlong);


        //Console.WriteLine(latlong.AddressName + "," + latlong.Latitude+ "," + latlong.Longitude);
        //Console.WriteLine(latlong);
        //Console.WriteLine(latlong.AddressName + " Lat: " + latlong.Latitude + " Lon: " + latlong.Longitude );
        //Console.WriteLine($"Latidud: {latlong.Latitude}, Longitud: {latlong.Longitude}");
        //var httpResponse = await repositorio.Post<LatLong>("api/Usuarios/", latlong);

        if (httpResponse.Error)
        {
            await mostrarMensajes.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            await mostrarMensajes.MostrarMensajeExitoso("Se agregó exitosamente su ubicación");
            navigationManager.NavigateTo("");
        }
    }
}
