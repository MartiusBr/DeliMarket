@inject IJSRuntime js
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensajes
@inject NavigationManager navigationManager
@page "/listaordenC"

<h1>Lista de ordenes Cliente</h1>
<div class="row mt-2">




    <table class="table">       
        <ListadoGenerico Listado="Ordenes">
            <HayRegistros Context="orden">
                <tr>
                    <td>
                        <div class="col">
                            <h5>@orden.FechaCreacion</h5>
                            Items:
                            <strong>@orden.CantidadTotal</strong>;
                            Total price:
                            <strong>@orden.Montototal</strong>
                        </div>
                    </td>
                    <td>
                        <div class="col">
                            Status: <strong>@orden.Estado</strong>
                        </div>
                    </td>
                    <td>
                        <div class="col flex-grow-0">
                            <a href="myorders/@orden.Id" class="btn btn-success">
                                Info &gt;
                            </a>
                        </div>
                    </td>
                </tr>
            </HayRegistros>
        </ListadoGenerico>
    </table>
</div>



@code {
    [Parameter] public List<ProductoMercado> Productos { get; set; }
    private List<Orden> Ordenes { get; set; }

    protected async override Task OnInitializedAsync()
    {

        var responseHttp = await repositorio.Get<List<Orden>>($"api/ordenes/ListaOrdenPersonalizada");
        if (responseHttp.Error)
        {
            if (responseHttp.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("");
            }
            else
            {
                var mensajeError = await responseHttp.GetBody();
                await mostrarMensajes.MostrarMensajeError(mensajeError);
            }
        }
        else
        {
            Ordenes = responseHttp.Response;

        }

    }


}
