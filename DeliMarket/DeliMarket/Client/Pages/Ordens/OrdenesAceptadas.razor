@inject IJSRuntime js
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensajes
@inject NavigationManager navigationManager
@page "/listaordenAceptadas"
<h3>Lista de ordenes aceptadas</h3>
<div class="row mt-2">
    <table class="table">
        <ListadoGenerico Listado="Ordenes">
            <HayRegistros Context="orden">
                <tr>
                    <td>
                        <div class="col">
                            <h5>@orden.FechaCreacion</h5>
                            Items:
                            <strong>@orden.CantidadTotal</strong>;
                            Total price:
                            <strong>@orden.Montototal</strong>
                        </div>
                    </td>
                    <td>
                        <div class="col">
                            @switch (orden.Estado)
                            {
                                case 2:
                                    estados = "procesando";
                                    break;
                                case 3:
                                    estados = " enviando";
                                    break;
                                case 4:
                                    estados = "completado";
                                    break;

                            }
                        Status: <strong>@estados</strong>
                        </div>
                    </td>                    
                    <td>
                        <div class="row">                                                        
                            <div class="col">
                                @if (orden.Estado == 4)
                                {
                                    <button type="button" class="btn btn-warning btn-rounded disabled" @onclick="@(e=> ActualizarEstado(3,orden.Id))">Enviando</button>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-warning btn-rounded" @onclick="@(e=> ActualizarEstado(3,orden.Id))">Enviando</button>
                                }

                            </div>
                            <div class="col">
                                <button type="button" class="btn btn-warning btn-rounded" @onclick="@(e=> ActualizarEstado(4,orden.Id))">Completado</button>
                            </div>
                        </div>
                    </td>
                </tr>
            </HayRegistros>
        </ListadoGenerico>
    </table>

</div>



@code {
    [Parameter] public List<ProductoMercado> Productos { get; set; }
    private List<Orden> Ordenes { get; set; }
    private string estados { get; set; }

    protected async Task Lista()
    {
        var responseHttp = await repositorio.Get<List<Orden>>($"api/Ordenes/ListaOrdenAceptadas");

        if (responseHttp.Error)
        {
            if (responseHttp.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("");
            }
            else
            {
                var mensajeError = await responseHttp.GetBody();
                await mostrarMensajes.MostrarMensajeError(mensajeError);
            }
        }
        else
        {
            Ordenes = responseHttp.Response;
        }
    }

    protected async override Task OnInitializedAsync()
    {
        await Lista();
    }

    protected async Task ActualizarEstado(int estado, int id)
    {
        var rpta = await repositorio.Get<int>($"api/ordenes/ActualizarEstadoOrden/{estado}/{id}");

        if (rpta.Error)
        {
            if (rpta.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("");
            }
            else
            {
                var mensajeError = await rpta.GetBody();
                await mostrarMensajes.MostrarMensajeError(mensajeError);
            }
        }
        else
        {
            await mostrarMensajes.MostrarMensajeExitoso("estado Actualizado");
        }
        await Lista();
    }
}
