@page "/Registro/Mercado"

@inject IRepositorio repositorio
@inject NavigationManager navigationManager
@inject ILoginService loginService
@inject IMostrarMensajes mostrarMensajes

@using DeliMarket.Client.Auth

<h3>Registro Mercado</h3>

<EditForm Model="@mercadoInfo" OnValidSubmit="CrearMercado">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label>RUC:</label>
        <div>
            <InputText Class="form-control" @bind-Value="@mercadoInfo.RUC" />
            <ValidationMessage For="@(() => mercadoInfo.RUC)" />
        </div>
    </div>

    <div class="form-group">
        <label>Nombre Mercado:</label>
        <div>
            <InputText Class="form-control" @bind-Value="@mercadoInfo.Nombre" />
            <ValidationMessage For="@(() => mercadoInfo.Nombre)" />
        </div>
    </div>

    <div class="form-group">
        <label>Email:</label>
        <div>
            <InputText Class="form-control" @bind-Value="@mercadoInfo.Email" />
            <ValidationMessage For="@(() => mercadoInfo.Email)" />
        </div>
    </div>

    <div class="form-group">
        <label>Numero de Celular:</label>
        <div>
            <InputText Class="form-control" @bind-Value="@mercadoInfo.NumeroCel" />
            <ValidationMessage For="@(() => mercadoInfo.NumeroCel)" />
        </div>
    </div>

    <div class="form-group">
        <label>Número de sanidad:</label>
        <div>
            <InputText Class="form-control" @bind-Value="@mercadoInfo.NroSanidad" />
            <ValidationMessage For="@(() => mercadoInfo.NroSanidad)" />
        </div>
    </div>

    <div class="form-group">
        <label>Nombre del Propietario:</label>
        <div>
            <InputText Class="form-control" @bind-Value="@mercadoInfo.Propietario" />
            <ValidationMessage For="@(() => mercadoInfo.Propietario)" />
        </div>
    </div>

    <div class="form-group">
        <label>Password:</label>
        <div>
            <InputPassword Class="form-control" @bind-Value="@mercadoInfo.Password" />
            <ValidationMessage For="@(() => mercadoInfo.Password)" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Registrar</button>

</EditForm>

@code {
    private MercadoInfo mercadoInfo = new MercadoInfo();

    private async Task CrearMercado()
    {
        var httpResponse = await repositorio.Post<MercadoInfo, UserToken>("api/cuentas/crearMercado", mercadoInfo);

        if (httpResponse.Error)
        {
            await mostrarMensajes.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            await loginService.Login(httpResponse.Response);
            navigationManager.NavigateTo("");
        }
    }
}
