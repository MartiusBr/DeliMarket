@page "/productos/editar/{ProductoId:int}"
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensaje
@inject NavigationManager navigationManager
@attribute [Authorize(Roles = "admin")]

<h3>Editar Producto</h3>

@if (Producto == null)
{
    <text>Cargando...</text>
}
else
{
    <FormularioProductos Producto="Producto" OnValidSubmit="Editar"
                         MercadosSeleccionados="MercadosSeleccionados"
                         CategoriasNoSeleccionados="CategoriasNoSeleccionados"
                         CategoriasSeleccionados="CategoriasSeleccionados"></FormularioProductos>
}

@code {
    [Parameter] public int ProductoId { get; set; }
    Producto Producto;
    private List<Categoria> CategoriasSeleccionados = new List<Categoria>();
    private List<Categoria> CategoriasNoSeleccionados = new List<Categoria>();
    private List<Mercado> MercadosSeleccionados { get; set; }

    protected async override Task OnInitializedAsync()
    {
        var httpResponse = await repositorio
            .Get<ProductoActualizacionDTO>($"api/productos/actualizar/{ProductoId}");

        if (httpResponse.Error)
        {
            if (httpResponse.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("");
            }
            else
            {
                await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
            }
        }
        else
        {
            var model = httpResponse.Response;
            MercadosSeleccionados = model.Mercados;
            CategoriasNoSeleccionados = model.CategoriasNoSeleccionados;
            CategoriasSeleccionados = model.CategoriasSeleccionados;
            Producto = model.Producto;
        }
    }

    private async Task Editar()
    {
        var httpResponse = await repositorio.Put("api/productos", Producto);
        if (httpResponse.Error)
        {
            await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            navigationManager.NavigateTo($"producto/{ProductoId}");
        }
    }
}
